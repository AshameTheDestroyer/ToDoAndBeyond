@using ToDoAndBeyond.Enums
@model ProjectsDTO
@{
    ViewData["Title"] = "Projects";
    ViewData["Styling"] = "projects";
}

<main id="project-displayer" class="displayer">
    <h1>Projects</h1>
    <section class="slider">
        @if (Model.ProjectChunks.Aggregate(0, (accumulator, projectChunk) => accumulator + projectChunk.Count()) == 0)
        {
            <div class="empty-message">
                <span>🥲</span>
                <p>There's no <strong>projects</strong> here yet.</p>
            </div>
        }

        @foreach (var projectChunk in Model.ProjectChunks ?? [])
        {
            @foreach (var project in projectChunk ?? [])
            {
                <button class="project-title-card link-button"
                    data-is-initial="@project.Name.StartsWith('~').ToString().ToLower()">
                    <a asp-controller="Projects" asp-route-projectID="@project.ID"
                        asp-route-projectName='@project.Name.Replace(" ", "")'>
                        <span>@(project.Icon ?? "🔘")</span>
                        <p>@project.Name.Replace("~", "")</p>
                    </a>
                </button>
            }
        }
    </section>
</main>

<section id="task-displayer" class="displayer">
    <h1>Tasks</h1>
    <section class="slider">
        @if (Model.Tasks == null || Model.Tasks.Any() == false)
        {
            <div class="empty-message">
                <span>🥲</span>
                <p>There's no <strong>tasks</strong> here yet.</p>
            </div>
        }

        @foreach (var task in Model.Tasks ?? [])
        {
            <button class="task-title-card link-button" data-is-starred='@(task.IsStarred ? "⭐" : "")'
                style='@(task.Colour != null ? $"--title-card-colour: {task.Colour};" : "") @(task.ImportanceColour != null ? $"--task-importance-colour: {task.ImportanceColour};" : "")'>
                <a asp-controller="Projects" asp-route-projectID="@Model.SelectedProject?.ID"
                    asp-route-projectName='@Model.SelectedProject?.Name.Replace(" ", "")' asp-route-taskID="@task.ID">
                    <input type="checkbox" checked="@task.IsCompleted">
                    <p>
                        @task.Name
                        <small>@(task.DueTime != null ? $"({task.DueTime?.GetDateTimeFormats()[3]})" : "")</small>
                    </p>
                    <span>@task.ImportanceIcon</span>
                </a>
            </button>
        }
    </section>
</section>

<section id="step-displayer" class="displayer">
    <h1>Steps</h1>
    <section class="slider">
        @if (Model.Steps == null || Model.Steps?.Any() == false)
        {
            <div class="empty-message">
                <span>🥲</span>
                <p>There's no <strong>steps</strong> here yet.</p>
            </div>
        }

        @foreach (var step in Model.Steps ?? [])
        {
            <button class="step-title-card link-button">
                <a href="#">
                    <input type="checkbox" checked="@step.IsCompleted">
                    <p>@step.Name</p>
                </a>
            </button>
        }
    </section>
</section>