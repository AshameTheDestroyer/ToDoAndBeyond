@using ToDoAndBeyond.Enums
@using ToDoAndBeyond.Views.Projects
@using Microsoft.AspNetCore.Components

@model ProjectsDTO

@{
    ViewData["Title"] = "Projects";
    ViewData["Styling"] = "projects";
}

<main id="project-displayer" class="displayer">
    <component type="typeof(DisplayerHeader)" render-mode="Static" param-Name='"Project"'
        param-SearchTerm="Model.SearchTerm" />
    <section class="slider">
        @if (!Model.ProjectChunks.Any(projectChunk => projectChunk.Any()))
        {
            <component type="typeof(EmptyMessage)" render-mode="Static" param-emptyMessageType="EmptyMessageType.Project" />
        }

        @foreach (var projectChunk in Model.ProjectChunks)
        {
            @foreach (var project in projectChunk)
            {
                <component type="typeof(ToDoProjectCard)" render-mode="Static" param-project="project" />
            }
        }
    </section>
</main>

<section id="task-displayer" class="displayer">
    <component type="typeof(DisplayerHeader)" render-mode="Static" param-Name='"Task"' />
    <section class="slider">
        @if (Model.Tasks == null || Model.Tasks.Any() == false)
        {
            <component type="typeof(EmptyMessage)" render-mode="Static" param-emptyMessageType="EmptyMessageType.Task" />
        }

        @foreach (var nestableTask in Model.GetNestableToDoTasks() ?? Array.Empty<NestableToDoTaskDTO>())
        {
            <component type="typeof(ToDoTaskCard)" render-mode="Static" param-nestableTask="nestableTask"
                param-selectedProject="Model.SelectedProject" />
        }
    </section>
</section>

<section id="step-displayer" class="displayer">
    <component type="typeof(DisplayerHeader)" render-mode="Static" param-Name='"Step"' />
    <section class="slider">
        @if (Model.Steps == null || Model.Steps.Any() == false)
        {
            <component type="typeof(EmptyMessage)" render-mode="Static" param-emptyMessageType="EmptyMessageType.Step" />
        }

        @foreach (var step in Model.Steps ?? Array.Empty<ToDoStepDTO>())
        {
            <component type="typeof(ToDoStepCard)" render-mode="Static" param-step="step" />
        }
    </section>
</section>