@using ToDoAndBeyond.Enums
@model ProjectsDTO
@{
    ViewData["Title"] = "Projects";
    ViewData["Styling"] = "projects";
}

<h1>Projects</h1>
<main id="project-displayer">
    @foreach (var projectChunk in Model.ProjectChunks ?? [])
    {
        <section>
            @foreach (var project in projectChunk ?? [])
            {
                <button class="project-title-card link-button">
                    <a asp-controller="Projects" asp-route-projectID="@project.ID"
                        asp-route-projectName='@project.Name.Replace(" ", "")'>
                        <span>@(project.Icon ?? "üîò")</span>
                        <p>@project.Name.Replace("~", "")</p>
                    </a>
                </button>
            }
        </section>
    }
</main>

<section id="task-displayer">
    @foreach (var task in Model.Tasks ?? [])
    {
        <button class="task-title-card link-button"
            style='@(task.Colour != null ? $"--task-colour: {task.Colour};" : "") @(task.ImportanceColour != null ? $"--task-importance-colour: {task.ImportanceColour};" : "")'>
            <a href="#">
                <input type="checkbox" checked="@task.IsCompleted">
                <p>
                    @task.Name
                    <small>@(task.DueTime != null ? $"({task.DueTime?.GetDateTimeFormats()[3]})" : "")</small>
                </p>
                <span>@(task.IsStarred ? "‚≠ê" : "")</span>
                <span>@task.ImportanceIcon</span>
            </a>
        </button>
    }
</section>