@using ToDoAndBeyond.DTOs
@using ToDoAndBeyond.Interfaces
@using ToDoAndBeyond.Controllers

@rendermode Microsoft.AspNetCore.Components.Web.RenderMode.InteractiveServer

@inject IToDoTaskRepository taskRepository

@code
{
    [Parameter]
    public required NestableToDoTaskDTO NestableTask { get; set; }
    
    [Parameter]
    public required ToDoProjectDTO SelectedProject { get; set; }

    private string style
    {
        get
        {
            string titleCardColour = NestableTask.Task.Colour != null ? $"--title-card-colour: {NestableTask.Task.Colour};" : "",
                taskImportanceColour = NestableTask.Task.ImportanceColour != null ? $"--task-importance-colour: {NestableTask.Task.ImportanceColour};" : "",
                taskNestingLevel = $"--task-nesting-level: {NestableTask.NestingLevel};",
                TaskGapLevel = $"--task-gap-level: {NestableTask.GapLevel};";
                
            return new string[]
            {
                titleCardColour,
                taskImportanceColour,
                taskNestingLevel,
                TaskGapLevel,
            }.Aggregate("", (accumulator, @string) => accumulator + @string);
        }
    }

    private string url => 
        ProjectsController.GenerateURL(SelectedProject.ID, SelectedProject.Name, NestableTask.Task.ID);

    private string date => NestableTask.Task.DueTime != null ?
        $"({NestableTask.Task.DueTime?.GetDateTimeFormats()[3]})" : "";

    private void UpdateIsCompleted() =>
        taskRepository.UpdateIsCompleted(NestableTask.Task.ID, !NestableTask.Task.IsCompleted);
}

<button 
    class="task-title-card link-button"
    
    style="@style"
    data-is-starred='@(NestableTask.Task.IsStarred ? "⭐" : "")'
    data-is-nested="@((NestableTask.NestingLevel > 0).ToString().ToLower())"
>
    <a href="@url">
        <input type="checkbox" checked="@NestableTask.Task.IsCompleted" @onclick="UpdateIsCompleted">
        <p>
            @NestableTask.Task.Name
            <small>@date</small>
        </p>
        <span>@NestableTask.Task.ImportanceIcon</span>
    </a>
</button>